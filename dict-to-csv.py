import csv

# Given dictionary
latencies={'BERT_pytorch': 18.806411, 'Background_Matting': -1, 'LearningToPaint': 5929.577012, 'Super_SloMo': 121.512794, 'alexnet': 1.73379, 'basic_gnn_edgecnn': 3.981847, 'basic_gnn_gcn': 10.044395, 'basic_gnn_gin': 1.674367, 'basic_gnn_sage': 1.365281, 'cm3leon_generate': 798.032365, 'dcgan': 1.340637, 'demucs': 237.907591, 'densenet121': 120.720592, 'detectron2_fasterrcnn_r_101_c4': 269.666936, 'detectron2_fasterrcnn_r_101_dc5': 128.567642, 'detectron2_fasterrcnn_r_101_fpn': 99.419404, 'detectron2_fasterrcnn_r_50_c4': 248.247951, 'detectron2_fasterrcnn_r_50_dc5': 105.2845, 'detectron2_fasterrcnn_r_50_fpn': 76.360879, 'detectron2_fcos_r_50_fpn': 75.869702, 'detectron2_maskrcnn': 86.701546, 'detectron2_maskrcnn_r_101_c4': 288.710633, 'detectron2_maskrcnn_r_101_fpn': 110.691718, 'detectron2_maskrcnn_r_50_c4': 267.217988, 'detectron2_maskrcnn_r_50_fpn': 86.035867, 'dlrm': 10.807676, 'doctr_det_predictor': 51.01316, 'doctr_reco_predictor': 6.747679, 'drq': 1.991405, 'fastNLP_Bert': 61.141088, 'functorch_dp_cifar10': 1.774636, 'functorch_maml_omniglot': -1, 'hf_Albert': 15.188482, 'hf_Bart': 13.230245, 'hf_Bert': 15.865797, 'hf_Bert_large': 37.376255, 'hf_BigBird': 195.307288, 'hf_DistilBert': 8.738212, 'hf_GPT2': 16.712856, 'hf_GPT2_large': 79.606581, 'hf_Longformer': 174.320194, 'hf_Reformer': 22.574375, 'hf_Roberta_base': 27.000974, 'hf_T5': 27.023426, 'hf_T5_base': 70.643047, 'hf_T5_generate': 1408.973768, 'hf_T5_large': 75.596308, 'hf_Whisper': 6.022077, 'hf_clip': 23.081739, 'hf_distil_whisper': 40.577529, 'lennard_jones': 1.222984, 'llama': 6.536887, 'llama_v2_7b_16h': -1, 'llava': -1, 'maml': 388.660022, 'maml_omniglot': -1, 'microbench_unbacked_tolist_sum': 113.575846, 'mnasnet1_0': 11.442846, 'mobilenet_v2': 8.38337, 'mobilenet_v2_quantized_qat': -1, 'mobilenet_v3_large': 11.609493, 'moco': -1, 'moondream': 69.264387, 'nanogpt': 221.089718, 'nvidia_deeprecommender': 0.681685, 'opacus_cifar10': 2.622245, 'phlippe_densenet': 16.02874, 'phlippe_resnet': 2.90237, 'pyhpc_equation_of_state': 10.310139, 'pyhpc_isoneutral_mixing': 26.635361, 'pyhpc_turbulent_kinetic_energy': 19.85456, 'pytorch_CycleGAN_and_pix2pix': 5.878646, 'pytorch_stargan': 11.571015, 'pytorch_unet': 92.858124, 'resnet152': 67.419325, 'resnet18': 3.159817, 'resnet50': 18.352312, 'resnet50_quantized_qat': -1, 'resnext50_32x4d': 10.760384, 'sam': 686.137013, 'sam_fast': -1, 'shufflenet_v2_x1_0': 18.595334, 'simple_gpt': -1, 'simple_gpt_tp_manual': -1, 'soft_actor_critic': -1, 'speech_transformer': 4058.139905, 'squeezenet1_1': 4.371452, 'stable_diffusion_text_encoder': -1, 'stable_diffusion_unet': -1, 'tacotron2': 639.62434, 'timm_efficientdet': -1, 'timm_efficientnet': 25.009426, 'timm_nfnet': 54.08671, 'timm_regnet': 36.304955, 'timm_resnest': 8.542147, 'timm_vision_transformer': 12.838932, 'timm_vision_transformer_large': 88.185085, 'timm_vovnet': 26.489781, 'torch_multimodal_clip': 63.137979, 'tts_angular': 8.809824, 'vgg16': 2.684548, 'vision_maskrcnn': 199.598016, 'yolov3': 97.696294}
# Convert to CSV format (tab-separated for easy pasting into Excel/Sheets)
csv_data = "Model Name\tLatency\n"
csv_data += "\n".join([f"{model}\t{latency}" for model, latency in latencies.items()])

# Save to a file (optional)
with open("latencies.tsv", "w", encoding="utf-8") as f:
    f.write(csv_data)

# Print to console for copying
print(csv_data)
