import csv

# Given dictionary
latencies={'BERT_pytorch': 70.924853, 'Background_Matting': -1, 'LearningToPaint': 4542.662873, 'Super_SloMo': 179.228014, 'alexnet': 7.857684, 'basic_gnn_edgecnn': 13.295782, 'basic_gnn_gcn': 4.884251, 'basic_gnn_gin': 2.153923, 'basic_gnn_sage': 2.147194, 'cm3leon_generate': 1039.128623, 'dcgan': 4.666313, 'demucs': 199.703682, 'densenet121': 53.312166, 'detectron2_fasterrcnn_r_101_c4': 112.544258, 'detectron2_fasterrcnn_r_101_dc5': 45.14285, 'detectron2_fasterrcnn_r_101_fpn': 34.14483, 'detectron2_fasterrcnn_r_50_c4': 101.764068, 'detectron2_fasterrcnn_r_50_dc5': 39.980427, 'detectron2_fasterrcnn_r_50_fpn': 28.179476, 'detectron2_fcos_r_50_fpn': 31.543684, 'detectron2_maskrcnn': 52.32267, 'detectron2_maskrcnn_r_101_c4': 120.104438, 'detectron2_maskrcnn_r_101_fpn': 39.756038, 'detectron2_maskrcnn_r_50_c4': 109.662973, 'detectron2_maskrcnn_r_50_fpn': 33.823192, 'dlrm': 3.419218, 'doctr_det_predictor': 38.47638, 'doctr_reco_predictor': 3.224334, 'drq': 2.092305, 'fastNLP_Bert': 67.266354, 'functorch_dp_cifar10': 3.693531, 'functorch_maml_omniglot': 0.994668, 'hf_Albert': 11.592808, 'hf_Bart': 12.419086, 'hf_Bert': 8.166879, 'hf_Bert_large': 15.575418, 'hf_BigBird': 93.935916, 'hf_DistilBert': 6.187572, 'hf_GPT2': 10.497508, 'hf_GPT2_large': 52.684305, 'hf_Longformer': 126.616096, 'hf_Reformer': 11.987968, 'hf_Roberta_base': 13.532257, 'hf_T5': 117.796368, 'hf_T5_base': 374.493591, 'hf_T5_generate': 3496.39638, 'hf_T5_large': 83.871912, 'hf_Whisper': 13.46742, 'hf_clip': 46.841185, 'hf_distil_whisper': 35.776992, 'lennard_jones': 2.64594, 'llama': 13.030829, 'llama_v2_7b_16h': -1, 'llava': -1, 'maml': 616.250939, 'maml_omniglot': 0.97558, 'microbench_unbacked_tolist_sum': 19.889818, 'mnasnet1_0': 6.899155, 'mobilenet_v2': 7.075937, 'mobilenet_v2_quantized_qat': -1, 'mobilenet_v3_large': 8.183441, 'moco': 187.143431, 'moondream': 41.180601, 'nanogpt': 255.165611, 'nvidia_deeprecommender': 16.292354, 'opacus_cifar10': 4.662676, 'phlippe_densenet': 13.652716, 'phlippe_resnet': 3.277738, 'pyhpc_equation_of_state': 16.50047, 'pyhpc_isoneutral_mixing': 27.408623, 'pyhpc_turbulent_kinetic_energy': 14.906301, 'pytorch_CycleGAN_and_pix2pix': 7.242696, 'pytorch_stargan': 20.405393, 'pytorch_unet': 48.219457, 'resnet152': 41.446128, 'resnet18': 3.429993, 'resnet50': 20.776451, 'resnet50_quantized_qat': -1, 'resnext50_32x4d': 7.952435, 'sam': 1101.422299, 'sam_fast': 200.668741, 'shufflenet_v2_x1_0': 9.143264, 'simple_gpt': -1, 'simple_gpt_tp_manual': -1, 'soft_actor_critic': -1, 'speech_transformer': 4560.572646, 'squeezenet1_1': 2.835659, 'stable_diffusion_text_encoder': -1, 'stable_diffusion_unet': -1, 'tacotron2': 905.762883, 'timm_efficientdet': 1949.92733, 'timm_efficientnet': 21.970636, 'timm_nfnet': 154.649878, 'timm_regnet': 49.146127, 'timm_resnest': 16.117755, 'timm_vision_transformer': 11.038132, 'timm_vision_transformer_large': 491.568566, 'timm_vovnet': 20.493256, 'torch_multimodal_clip': 75.454059, 'tts_angular': 5.786358, 'vgg16': 5.150591, 'vision_maskrcnn': 71.585808, 'yolov3': 29.82096}


# Convert to CSV format (tab-separated for easy pasting into Excel/Sheets)
csv_data = "Model Name\tLatency\n"
csv_data += "\n".join([f"{model}\t{latency}" for model, latency in latencies.items()])

# Save to a file (optional)
with open("latencies.tsv", "w", encoding="utf-8") as f:
    f.write(csv_data)

# Print to console for copying
print(csv_data)
